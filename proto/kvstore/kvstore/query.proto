syntax = "proto3";

package kvstore.kvstore;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "kvstore/kvstore/params.proto";
import "kvstore/kvstore/entry.proto";

option go_package = "kvstore/x/kvstore/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/kvstore/kvstore/params";
  
  }
  
  // Queries a list of GetEntry items.
  rpc GetEntry (QueryGetEntryRequest) returns (QueryGetEntryResponse) {
    option (google.api.http).get = "/kvstore/kvstore/get_entry/{key}";
  
  }
  
  // Queries a list of ListEntry items.
  rpc ListEntry (QueryListEntryRequest) returns (QueryListEntryResponse) {
    option (google.api.http).get = "/kvstore/kvstore/list_entry/{key}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetEntryRequest {
  string key = 1;
}

message QueryGetEntryResponse {
  Entry entry = 1;
}

message QueryListEntryRequest {
  string                                key        = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryListEntryResponse {
  repeated Entry                         entry      = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

